---

# Deploy Grafana
- block:

  # If firewall is running open the needed port.
  - name: Grafana - Firewall add port while online
    ansible.posix.firewalld:
      port: "{{ grafana_http_port }}/tcp"
      permanent: true
      state: enabled
      immediate: true
    when:
      - "'firewalld' in ansible_facts.packages"
      - ansible_facts.services["firewalld.service"].state == "running"

  - name: Grafana - Install package
    community.general.zypper:
      name: grafana
      state: latest

  - name: Grafana - Set URL port
    replace:
      path: /etc/grafana/grafana.ini
      regexp: '.*http_port\ .*'
      replace: "http_port = {{ grafana_http_port }}"
      backup: yes
    register: grafana_port_conf

  - name: Grafana - Restart service
    ansible.builtin.service:
      name: grafana-server.service
      enabled: true
      state: restarted
    when:
      - grafana_port_conf.changed or
        ansible_facts.services["grafana-server.service"].state != "running"  


  # This task is an example on how to change the default password.
  # It will change it only if the default one (admin) is valid.
  - name: Grafana - Change Password
    shell: "grafana-cli admin reset-admin-password {{grafana_admin_password}}"
    register: __command_admin
    changed_when: __command_admin.rc !=0 

  when: deploy_grafana_server and (groups['grafana_server'] | length  == 1)


# Don't deploy Grafana, stop service and disable port 
- block:

  - name: Grafana - Remove package
    community.general.zypper:
      name: grafana
      state: absent

  - name: Grafana - Remove config files 
    ansible.builtin.file:
      path: /etc/grafana/grafana.ini
      state: absent
    when: cleanup_config 


  # If firewall is not running but installed we have to disable the ports without "immediate:".
  - name: Grafana - Firewall remove port while offline
    ansible.posix.firewalld:
      port: "{{grafana_http_port}}/tcp"
      permanent: true
      offline: true
      state: disabled
    when:
      - "'firewalld' in ansible_facts.packages"
      - ansible_facts.services["firewalld.service"].state != "running"

  # If firewall is running "immediate:" will be used to disable the port immediately.
  - name: Grafana - Firewall remove port while online
    ansible.posix.firewalld:
      port: "{{grafana_http_port}}/tcp"
      permanent: true
      immediate: true
      state: disabled
    when:
      - ansible_facts.services["firewalld.service"].state == "running" 


  when: not deploy_grafana_server or (groups['grafana_server'] | length  == 0)    


